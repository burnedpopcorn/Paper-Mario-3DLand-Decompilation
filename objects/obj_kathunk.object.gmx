<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mask_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z = 0
atk = 5
dir = 180
rot = 0
turn = 0
invert = 0
blue = make_color_rgb(29, 69, 138)
yellow = make_color_rgb(233, 197, 77)
alarm[0] = 1
alarm[1] = 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>turn = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ID;
z = (collision_point(x, y, par_floor, 0, 0)).z
ID = instance_place(x, y, obj_arrow_up)
if (ID.xdir == 1)
    dir = 0
if (ID.xdir == -1)
    dir = 180
if (ID.ydir == 1)
    dir = 270
if (ID.ydir == -1)
    dir = 90
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ID, dirprev, tdir, edge;
if turn
{
    if (rot &lt; 180)
        rot += 3
    else
    {
        turn = 0
        rot = 0
        x += lengthdir_x(64, dir)
        y += lengthdir_y(64, dir)
        alarm[1] = 60
    }
}
ID = instance_place(x, y, obj_arrow_up)
if (ID &amp;&amp; (!(place_meeting(xprevious, yprevious, ID))))
{
    dirprev = dir
    if (ID.xdir == 1)
        tdir = 0
    if (ID.xdir == -1)
        tdir = 180
    if (ID.ydir == 1)
        tdir = 270
    if (ID.ydir == -1)
        tdir = 90
    if (tdir == ((dir + 180) % 360) &amp;&amp; ID.sdir == -1)
    {
        dir = tdir
        invert = (!invert)
    }
    else if invert
        dir = ID.sdir
    else
        dir = tdir
}
x1[0] = x - 32 + (60 - (lengthdir_x(60, rot))) * (dir == 0) + (-4 - (lengthdir_x(-4, rot))) * (dir == 180)
x2[0] = x1[0] + 8
y1[0] = y - 32 + (60 - (lengthdir_x(60, rot))) * (dir == 270) + (-4 - (lengthdir_x(-4, rot))) * (dir == 90)
y2[0] = y + 31 - (60 - (lengthdir_x(60, rot))) * (dir == 90) - (-4 - (lengthdir_x(-4, rot))) * (dir == 270)
z1[0] = z + (lengthdir_y(-64, rot)) * (dir == 0)
z2[0] = z1[0] + 8
edge = collision_line(x1[0], y1[0], x2[0], y2[0], obj_mario, false, false)
if edge
{
    if (obj_mario.z &lt;= max(z1[0], z2[0]) &amp;&amp; (obj_mario.z + obj_mario.height) &gt;= min(z1[0], z2[0]))
        event_user(0)
}
y2[0] += 1
x1[1] = x + 24 - (60 - (lengthdir_x(60, rot))) * (dir == 180) - (-4 - (lengthdir_x(-4, rot))) * (dir == 0)
x2[1] = x1[1] + 8
y1[1] = y - 32 + (60 - (lengthdir_x(60, rot))) * (dir == 270) + (-4 - (lengthdir_x(-4, rot))) * (dir == 90)
y2[1] = y + 31 - (60 - (lengthdir_x(60, rot))) * (dir == 90) - (-4 - (lengthdir_x(-4, rot))) * (dir == 270)
z1[1] = z + (lengthdir_y(-64, rot)) * (dir == 180)
z2[1] = z1[1] + 8
edge = collision_line(x1[1], y1[1], x2[1], y2[1], obj_mario, false, false)
if edge
{
    if (obj_mario.z &lt;= max(z1[1], z2[1]) &amp;&amp; (obj_mario.z + obj_mario.height) &gt;= min(z1[1], z2[1]))
        event_user(0)
}
y2[1] += 1
x1[2] = x - 32 + (60 - (lengthdir_x(60, rot))) * (dir == 0) + (-4 - (lengthdir_x(-4, rot))) * (dir == 180)
x2[2] = x + 31 - (60 - (lengthdir_x(60, rot))) * (dir == 180) - (-4 - (lengthdir_x(-4, rot))) * (dir == 0)
y1[2] = y - 32 + (60 - (lengthdir_x(60, rot))) * (dir == 270) + (-4 - (lengthdir_x(-4, rot))) * (dir == 90)
y2[2] = y1[2] + 8
z1[2] = z + (lengthdir_y(-64, rot)) * (dir == 270)
z2[2] = z1[2] + 8
edge = collision_line(x1[2], y1[2], x2[2], y2[2], obj_mario, false, false)
if edge
{
    if (obj_mario.z &lt;= max(z1[2], z2[2]) &amp;&amp; (obj_mario.z + obj_mario.height) &gt;= min(z1[2], z2[2]))
        event_user(0)
}
x2[2] += 1
x1[3] = x - 32 + (60 - (lengthdir_x(60, rot))) * (dir == 0) + (-4 - (lengthdir_x(-4, rot))) * (dir == 180)
x2[3] = x + 31 - (60 - (lengthdir_x(60, rot))) * (dir == 180) - (-4 - (lengthdir_x(-4, rot))) * (dir == 0)
y1[3] = y + 24 - (60 - (lengthdir_x(60, rot))) * (dir == 90) - (-4 - (lengthdir_x(-4, rot))) * (dir == 270)
y2[3] = y1[3] + 8
z1[3] = z + (lengthdir_y(-64, rot)) * (dir == 90)
z2[3] = z1[3] + 8
edge = collision_line(x1[3], y1[3], x2[3], y2[3], obj_mario, false, false)
if edge
{
    if (obj_mario.z &lt;= max(z1[3], z2[3]) &amp;&amp; (obj_mario.z + obj_mario.height) &gt;= min(z1[3], z2[3]))
        event_user(0)
}
x2[3] += 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_mario)
{
    if (!obj_mario.invincible)
    {
        with (obj_mario)
        {
            if (global.Powerup != 4)
                global.Powerup = 0
            invincible = 1
            timer_flash = 15
            hp -= max(0, (other.atk - def))
            ID = instance_create(x, y, obj_damage_star)
            ID.z = z
            ID.hurtplayer = 1
            ID.damage = max(0, (other.atk - def))
            with (ID)
                event_user(0)
            alarm[1] = 5
            play_sfx(sfx_damage)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xadd, yadd, i;
d3d_transform_set_identity()
switch dir
{
    case 0:
        d3d_transform_add_rotation_y((-rot))
        break
    case 90:
        d3d_transform_add_rotation_x((-rot))
        break
    case 180:
        d3d_transform_add_rotation_y(rot)
        break
    case 270:
        d3d_transform_add_rotation_x(rot)
        break
}

d3d_transform_add_translation((x + (lengthdir_x(32, dir))), (y + (lengthdir_y(32, dir))), (z + 4))
xadd = lengthdir_x(-32, dir)
yadd = lengthdir_y(-32, dir)
d3d_set_lighting(1)
d3d_light_define_direction(0, -1.5, -1, 2.5, 16777215)
d3d_light_define_direction(1, 1.5, -1, -2.5, 16777215)
d3d_light_enable(0, 1)
d3d_light_enable(1, 1)
draw_set_color(blue)
d3d_draw_block((xadd - 32), (yadd - 32), 4, (xadd - 32 + 8), (yadd + 32), -4, -1, 1, 1)
d3d_draw_block((xadd - 32), (yadd - 32), 4, (xadd + 32), (yadd - 32 + 8), -4, -1, 1, 1)
d3d_draw_block((xadd + 32 - 8), (yadd - 32), 4, (xadd + 32), (yadd + 32), -4, -1, 1, 1)
d3d_draw_block((xadd - 32), (yadd + 32 - 8), 4, (xadd + 32), (yadd + 32), -4, -1, 1, 1)
draw_set_color(c_white)
d3d_light_enable(0, 0)
d3d_light_enable(1, 0)
d3d_set_lighting(0)
draw_set_color(yellow)
for (i = 0; i &lt; 8; i += 1)
{
    d3d_draw_cone((xadd - 31), (yadd - 31 + 8 * i), 4, (xadd - 31 + 6), (yadd - 31 + 6 + 8 * i), 7, -1, 1, 1, 0, 4)
    d3d_draw_cone((xadd + 31), (yadd - 31 + 8 * i), 4, (xadd + 31 - 6), (yadd - 31 + 6 + 8 * i), 7, -1, 1, 1, 0, 4)
    d3d_draw_cone((xadd - 31 + 8 * i), (yadd - 31), 4, (xadd - 31 + 6 + 8 * i), (yadd - 31 + 6), 7, -1, 1, 1, 0, 4)
    d3d_draw_cone((xadd - 31 + 8 * i), (yadd + 31 - 6), 4, (xadd - 31 + 6 + 8 * i), (yadd + 31), 7, -1, 1, 1, 0, 4)
}
draw_set_color(c_white)
d3d_transform_set_identity()
switch dir
{
    case 0:
        d3d_transform_add_rotation_x(180)
        d3d_transform_add_rotation_y((-rot))
        break
    case 90:
        d3d_transform_add_rotation_y(180)
        d3d_transform_add_rotation_x((-rot))
        break
    case 180:
        d3d_transform_add_rotation_x(180)
        d3d_transform_add_rotation_y(rot)
        break
    case 270:
        d3d_transform_add_rotation_y(180)
        d3d_transform_add_rotation_x(rot)
        break
}

d3d_transform_add_translation((x + (lengthdir_x(32, dir))), (y + (lengthdir_y(32, dir))), (z + 4))
draw_set_color(yellow)
for (i = 0; i &lt; 8; i += 1)
{
    d3d_draw_cone((xadd - 31), (yadd - 31 + 8 * i), 4, (xadd - 31 + 6), (yadd - 31 + 6 + 8 * i), 7, -1, 1, 1, 0, 4)
    d3d_draw_cone((xadd + 31), (yadd - 31 + 8 * i), 4, (xadd + 31 - 6), (yadd - 31 + 6 + 8 * i), 7, -1, 1, 1, 0, 4)
    d3d_draw_cone((xadd - 31 + 8 * i), (yadd - 31), 4, (xadd - 31 + 6 + 8 * i), (yadd - 31 + 6), 7, -1, 1, 1, 0, 4)
    d3d_draw_cone((xadd - 31 + 8 * i), (yadd + 31 - 6), 4, (xadd - 31 + 6 + 8 * i), (yadd + 31), 7, -1, 1, 1, 0, 4)
}
draw_set_color(c_white)
d3d_transform_set_identity()
for (i = 0; i &lt;= 3; i += 1)
    d3d_draw_shadow(x1[i], y1[i], (z + 0.2), x2[i], y2[i], (z + 0.2), 0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
