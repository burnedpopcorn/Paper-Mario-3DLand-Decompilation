<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_logo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ID;
fog_enable(false)
ID = instance_create(0, 0, obj_fade_in)
ID.is3d = 0
alpha = 0
wave = 0
phase = 0
select = 0
cfg = 0
txt[0] = "Jump / Confirm"
txt[1] = "Run / Attack"
txt[2] = "Camera Left"
txt[3] = "Camera Right"
surf = surface_create(640, 360)
if file_exists("PM3DL Key Config.cfg")
{
    file = file_text_open_read("PM3DL Key Config.cfg")
    global.Key_jump = file_text_read_real(file)
    file_text_readln(file)
    global.Key_run = file_text_read_real(file)
    file_text_readln(file)
    global.Key_camleft = file_text_read_real(file)
    file_text_readln(file)
    global.Key_camright = file_text_read_real(file)
    file_text_close(file)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i, ID;
wave += 0.04
if (phase == 0)
    alpha = (sin(wave) + 1) * 0.5
if (phase == 1)
{
    wave += 0.6
    alpha = wave div pi
}
if (wave &gt;= (2 * pi))
    wave -= (2 * pi)
if (key_check_pressed(global.Key_start) &amp;&amp; (!instance_exists(obj_fade_in)) &amp;&amp; phase == 0)
{
    phase = 1
    alarm[0] = 60
}
if key_check_pressed(global.Key_jump)
{
    if (phase == 2)
    {
        switch select
        {
            case 0:
                phase = 4
                select = 0
                if file_exists("PM3DL Save.ini")
                    select = 1
                play_sfx(sfx_map_confirm)
                break
            case 1:
                if global.Gamepad
                    play_sfx(sfx_denied)
                else
                {
                    phase = 3
                    cfg = 0
                    for (i = 0; i &lt; 4; i += 1)
                        blacklist[i] = -4
                    keyboard_clear(global.Key_jump)
                    play_sfx(sfx_map_confirm)
                }
                break
            case 2:
                obj_gcontrol.frameskip += (1 + 1 * (obj_gcontrol.frameskip != 1))
                if (obj_gcontrol.frameskip &gt; 8)
                    obj_gcontrol.frameskip = 1
                obj_gcontrol.do_draw = 0
                play_sfx(sfx_map_confirm)
                break
        }

    }
    else if (phase == 4)
    {
        if (select == 1)
            load_game()
        ID = instance_create(x, y, obj_fade_out)
        ID.sprite = 158
        ID.rm = 3
        ID.is3d = 0
        play_sfx(sfx_map_confirm)
    }
}
if key_check_pressed(global.Key_up)
{
    if (select &gt; 0)
        select -= 1
}
if key_check_pressed(global.Key_down)
{
    if (select &lt; (2 - (phase == 4)))
        select += 1
}
if (phase != 2 &amp;&amp; phase != 4)
    select = 0
if (phase == 3 &amp;&amp; key_check_pressed(1))
{
    if keycfg_check_valid()
    {
        switch cfg
        {
            case 0:
                global.Key_jump = keyboard_key
                blacklist[0] = keyboard_key
                break
            case 1:
                global.Key_run = keyboard_key
                blacklist[1] = keyboard_key
                break
            case 2:
                global.Key_camleft = keyboard_key
                blacklist[2] = keyboard_key
                break
            case 3:
                global.Key_camright = keyboard_key
                blacklist[3] = keyboard_key
                break
        }

        if (cfg &lt; 3)
            cfg += 1
        else
        {
            phase = 2
            file = file_text_open_write("PM3DL Key Config.cfg")
            file_text_write_string(file, string(global.Key_jump))
            file_text_writeln(file)
            file_text_write_string(file, string(global.Key_run))
            file_text_writeln(file)
            file_text_write_string(file, string(global.Key_camleft))
            file_text_writeln(file)
            file_text_write_string(file, string(global.Key_camright))
            file_text_close(file)
        }
    }
    else
        play_sfx(sfx_denied)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
draw_set_alpha_test_ref_value(0)
draw_background(background_index[1], 0, 0)
draw_set_alpha_test_ref_value(127)
surface_set_target(surf)
draw_clear_alpha(c_black, 0)
draw_set_halign(fa_center)
draw_set_font(fnt_hey_gorgeous)
draw_set_blend_mode_ext(bm_src_alpha, bm_dest_color)
if (phase &lt;= 1)
{
    if (!global.Gamepad)
        draw_text_outlined(320, 260, "Press Enter to start!", 4)
    else
        draw_text_outlined(320, 260, "Press Start!", 4)
}
if (phase == 2)
{
    if (select == 0)
        draw_set_color(c_yellow)
    draw_text_outlined(320, 260, "Start Game", 4)
    draw_set_color(c_white)
    if global.Gamepad
        draw_set_color(c_gray)
    if (select == 1)
        draw_set_color(c_yellow)
    draw_text_outlined(320, 285, "Key Configuration", 4)
    draw_set_color(c_white)
    if (select == 2)
        draw_set_color(c_yellow)
    draw_text_outlined(320, 310, ("Frameskip: " + string(obj_gcontrol.frameskip)), 4)
    draw_set_color(c_white)
}
if (phase == 3)
{
    draw_text_outlined(320, 260, "Pick a key for:", 4)
    draw_text_outlined(320, 285, txt[cfg], 4)
}
if (phase == 4)
{
    if (select == 0)
        draw_set_color(c_yellow)
    draw_text_outlined(320, 260, "New Game", 4)
    draw_set_color(c_white)
    if (select == 1)
        draw_set_color(c_yellow)
    draw_text_outlined(320, 285, "Load Game", 4)
    draw_set_color(c_white)
}
draw_set_blend_mode(bm_normal)
draw_set_font(global.fnt_hud)
draw_set_halign(fa_left)
surface_reset_target()
if surface_exists(surf)
{
    draw_set_alpha(alpha)
    if (phase &gt;= 2)
        draw_set_alpha(1)
    draw_set_alpha_test_ref_value(0)
    draw_surface(surf, 0, 0)
    draw_set_alpha_test_ref_value(127)
    draw_set_alpha(1)
}
else
    surf = surface_create(640, 360)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>265,265</point>
  </PhysicsShapePoints>
</object>
