<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mask_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i;
phase = 0
alarm[0] = 120
for (i = 0; i &lt; 6; i += 1)
    tex[i] = sprite_get_texture(tex_dry_bones_parts, i)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i;
for (i = 0; i &lt; 6; i += 1)
{
    xxspeed[i] = txspeed[i]
    yyspeed[i] = tyspeed[i]
    zzspeed[i] = tzspeed[i]
    ggrav[i] = 0.25
    pphase[i] = 0
}
phase = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i, ID;
for (i = 0; i &lt; 6; i += 1)
{
    xx[i] += xxspeed[i]
    yy[i] += yyspeed[i]
    zz[i] += zzspeed[i]
    zzspeed[i] -= ggrav[i]
    if (zz[i] &lt; z || pphase[i])
    {
        zz[i] = z
        xxspeed[i] = 0
        yyspeed[i] = 0
        zzspeed[i] = 0
        ggrav[i] = 0
        pphase[i] = 1
        if (phase == 1)
        {
            instance_destroy()
            ID = instance_create(x, y, obj_dry_bones)
            ID.z = z
            ID.xspeed = xscale * 0.5
            ID.xscale = xscale
            ID.angle = angle
            exit
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (angle != 180 &amp;&amp; xscale == -1)
    angle += 9
if (angle != 0 &amp;&amp; xscale == 1)
    angle -= 9
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i;
for (i = 0; i &lt; 6; i += 1)
{
    xx[i] = x
    yy[i] = y
    zz[i] = z
    xxspeed[i] = -0.5 + random(1)
    yyspeed[i] = -0.5 + random(1)
    zzspeed[i] = 3 + random(1)
    ggrav[i] = 0.25
    txspeed[i] = xxspeed[i] * -1
    tyspeed[i] = yyspeed[i] * -1
    tzspeed[i] = zzspeed[i]
    pphase[i] = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i;
for (i = 0; i &lt; 6; i += 1)
{
    d3d_transform_set_identity()
    d3d_transform_add_rotation_z(angle)
    d3d_transform_add_translation(xx[i], yy[i], zz[i])
    d3d_draw_wall(-8, 0, 17, 8, 0, 0, tex[i], 1, 1)
    d3d_transform_set_identity()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
