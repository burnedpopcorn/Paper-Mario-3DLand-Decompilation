<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_platform_0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_block</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ID;
ID = instance_place(x, y, par_floor)
if ID
{
    z = ID.z
    zfloor = ID.z
}
else
{
    z = 0
    zfloor = 0
}
height = 12
bounce = 0
scale = 1
xspeed = 0
phase = 0
tex1 = background_get_texture(tex_spring_platform)
tex2 = background_get_texture(tex_spring_platform_bottom)
tex3 = background_get_texture(tex_spring_platform_right)
tex4 = background_get_texture(tex_spring_platform_top)
tex5 = background_get_texture(tex_spring_platform_left)
alarm[1] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xspeed = 0.5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mywall = instance_create(x, y, obj_wall)
mywall.z = z + height
mywall.bottom = z
mywall.dir = -1
mywall.sprite_index = spr_platform_0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bounce = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mywall.x = x
mywall.y = y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ID, col, col2;
if bounce
    scale += 0.05
else if (scale &gt; 1)
    scale -= 0.05
if (bounce &amp;&amp; place_meeting(x, y, obj_arrow_right) &amp;&amp; phase == 0)
{
    phase = 1
    alarm[2] = 60
}
ID = instance_place(x, y, obj_arrow_left)
if ID
{
    if (x &gt;= ID.x)
    {
        x = ID.x
        xspeed = 0
    }
}
col = place_meeting(x, y, obj_mario)
x += xspeed
col2 = place_meeting(x, y, obj_mario)
if (col2 &amp;&amp; (!col) &amp;&amp; (obj_mario.z + obj_mario.height) &gt;= z &amp;&amp; obj_mario.z &lt;= (z + height))
    obj_mario.x += xspeed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (point_distance(x, y, obj_cam.x, obj_cam.y) &lt; 480)
{
    d3d_transform_set_identity()
    d3d_transform_add_scaling(scale, scale, scale)
    d3d_transform_add_translation((x + 24), (y + 24), z)
    d3d_draw_floor(-24, -24, height, 24, 24, height, tex1, 1, 1)
    d3d_draw_wall(-24, 24, height, 24, 24, 0, tex2, 1, 1)
    d3d_draw_wall(24, 24, height, 24, -24, 0, tex3, 1, 1)
    d3d_draw_wall(24, -24, height, -24, -24, 0, tex4, 1, 1)
    d3d_draw_wall(-24, -24, height, -24, 24, 0, tex5, 1, 1)
    d3d_draw_floor(-24, -24, 0, 24, 24, 0, tex1, 1, 1)
    d3d_transform_set_identity()
    if (z != zfloor)
        d3d_draw_shadow(x, y, (zfloor + 0.2), (x + 48), (y + 48), (zfloor + 0.2), 0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>24,24</point>
  </PhysicsShapePoints>
</object>
