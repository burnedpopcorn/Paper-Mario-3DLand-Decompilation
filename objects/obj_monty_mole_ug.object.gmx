<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mask_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z = (instance_find_top(x, y, par_floor)).z
xspeed = 0.5
yspeed = 0
xscale = 1
angle = 0
index = 5
zfloor = z
height = 14
phase = 0
tex = 156
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ID;
if (angle != 180 &amp;&amp; xscale == -1)
    angle += 9
if (angle != 0 &amp;&amp; xscale == 1)
    angle -= 9
if (!phase)
{
    if (xspeed != 0)
        xscale = sign(xspeed)
    if (wall_detect((x + xspeed), y) || pit_detect((x + sign(xspeed) * 16), y))
        xspeed *= -1
    if ((!(wall_detect((x + xspeed), y))) &amp;&amp; (!(pit_detect((x + sign(xspeed) * 16), y))))
        x += xspeed
    if ((!(wall_detect(x, (y + yspeed)))) &amp;&amp; (!(pit_detect(x, (y + sign(yspeed) * 16)))))
        y += yspeed
}
if (instance_exists(obj_mario) &amp;&amp; (!phase))
{
    if (point_distance(x, y, obj_mario.x, obj_mario.y) &lt; 64)
    {
        phase = 1
        xspeed = 0
        index = 0
        tex = 127
        ID = instance_create(x, y, obj_monty_mole)
        ID.z = z
        instance_destroy()
        ID = instance_create(x, y, obj_dirthole)
        ID.z = z
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>index += ((point_distance(0, 0, xspeed, yspeed)) * 0.2)
if (index &gt;= 7)
    index -= 2
if (phase &amp;&amp; index &lt; 2)
    index += 0.2
d3d_transform_set_identity()
d3d_transform_add_rotation_z(angle)
d3d_transform_add_translation(x, y, z)
d3d_draw_wall(-16, 0, 8, 16, 0, 0, sprite_get_texture(tex, floor(index)), 1, 1)
d3d_transform_set_identity()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
