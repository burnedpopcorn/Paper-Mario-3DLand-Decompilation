<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mask_spikebar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_hurt</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
if place_meeting(x, y, par_floor)
    z = (instance_find_top(x, y, par_floor)).z
zstart = 0
zfloor = 0
zprev = 0
sine = 0
curve = 0
rot = 0
rotspd = 0
atk = 5
height = 16
rad = 32
blue = make_color_rgb(29, 69, 138)
yellow = make_color_rgb(233, 197, 77)
tex = background_get_texture(tex_spikebar_ring)
tex2 = background_get_texture(tex_spikebar_end)
tex3 = background_get_texture(tex_nail)
alarm[0] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>zstart = z
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var abssine;
if (room == rm_w1_3 || (room == rm_w4_4 &amp;&amp; (!(place_meeting(x, y, par_floorwalls)))))
    zfloor = -128
else
    zfloor = (instance_find_top(x, y, par_floor)).z
x = xstart + sine * 64
abssine = abs(sine * 6)
zprev = z
z = zstart - 8 + abssine * abssine
if (z &lt; zstart &amp;&amp; room != rm_w1_3 &amp;&amp; (room != rm_w4_4 || place_meeting(x, y, par_floorwalls)))
{
    z = zstart
    rotspd = (x - xprevious) * 4
}
else if (rotspd != 0)
    rotspd += ((0 - rotspd) * 0.05)
rot += rotspd
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sine = sin(obj_cam.curve + curve)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dir, dist, i, lenx, leny;
d3d_draw_shadow((x - 8), (y - rad), (zfloor + 0.2), (x + 8), (y + rad), (zfloor + 0.2), 0)
draw_set_color(blue)
d3d_transform_set_identity()
d3d_transform_add_rotation_x(90)
d3d_transform_add_translation(x, y, (z + 8))
draw_set_color(c_white)
d3d_draw_cylinder(-8, -8, rad, 8, 8, (rad - 4), tex2, 1, 1, 1, 16)
d3d_draw_cylinder(-8, -8, (-((rad - 4))), 8, 8, (-rad), tex2, 1, 1, 1, 16)
draw_set_color(blue)
d3d_draw_cylinder(-7, -7, (rad - 4), 7, 7, (-((rad - 4))), -1, 1, 1, 0, 16)
d3d_transform_set_identity()
draw_set_color(c_white)
d3d_transform_add_rotation_y((-rot))
d3d_transform_add_translation(x, (y + rad + 0.2), (z + 8))
d3d_draw_wall(-6, 0, -6, 6, 0, 6, tex3, 1, 1)
d3d_transform_set_identity()
draw_set_color(yellow)
d3d_transform_set_identity()
d3d_transform_add_rotation_y((-rot))
d3d_transform_add_translation(x, y, (z + 8))
d3d_draw_cone(-2, -2, 7, 2, 2, 12, -1, 1, 1, 0, 24)
d3d_draw_cone(-2, -24, 7, 2, -20, 12, -1, 1, 1, 0, 12)
d3d_draw_cone(-2, 20, 7, 2, 24, 12, -1, 1, 1, 0, 12)
d3d_transform_set_identity()
d3d_transform_add_rotation_y((-rot) - 90)
d3d_transform_add_translation(x, y, (z + 8))
d3d_draw_cone(-2, -13, 7, 2, -9, 12, -1, 1, 1, 0, 12)
d3d_draw_cone(-2, 9, 7, 2, 13, 12, -1, 1, 1, 0, 12)
d3d_transform_set_identity()
d3d_transform_add_rotation_y((-rot) - 180)
d3d_transform_add_translation(x, y, (z + 8))
d3d_draw_cone(-2, -2, 7, 2, 2, 12, -1, 1, 1, 0, 24)
d3d_draw_cone(-2, -24, 7, 2, -20, 12, -1, 1, 1, 0, 12)
d3d_draw_cone(-2, 20, 7, 2, 24, 12, -1, 1, 1, 0, 12)
d3d_transform_set_identity()
d3d_transform_add_rotation_y((-rot) - 270)
d3d_transform_add_translation(x, y, (z + 8))
d3d_draw_cone(-2, -13, 7, 2, -9, 12, -1, 1, 1, 0, 12)
d3d_draw_cone(-2, 9, 7, 2, 13, 12, -1, 1, 1, 0, 12)
d3d_transform_set_identity()
draw_set_color(c_white)
dir = point_direction(xstart, (zstart + 80), x, (z + 8))
dist = point_distance(xstart, (zstart + 80), x, (z + 8))
for (i = 0; i &lt; 4; i += 1)
{
    lenx = (lengthdir_x(dist, dir)) * (0.25 * i)
    leny = (lengthdir_y(dist, dir)) * (0.25 * i)
    d3d_draw_wall((xstart - 8 + lenx), (y - rad + 2), (zstart + 80 - 8 + leny), (xstart + 8 + lenx), (y - rad + 2), (zstart + 80 + 8 + leny), tex, 1, 1)
    d3d_draw_wall((xstart - 8 + lenx), (y + rad - 2), (zstart + 80 - 8 + leny), (xstart + 8 + lenx), (y + rad - 2), (zstart + 80 + 8 + leny), tex, 1, 1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>-8,-32</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
