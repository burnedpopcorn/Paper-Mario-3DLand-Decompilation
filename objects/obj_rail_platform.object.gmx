<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mask_rail_platform</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_platform</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z = 16
zfloor = z
xspeed = 0
zspeed = 0
zprev = z
grav = 0
acc = 0.05
maxspeed = 2
width = 64
index = 0
rot = 0
destrot = 0
rot2 = 0
cogw = 12
tex = 163
tex2 = background_get_texture(tex_cardboard_single)
tex3 = background_get_texture(tex_cog)
alarm[0] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z = (instance_place(x, y, obj_rails)).z + 16
zfloor = z
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ID;
ID = collision_line_top_from_z((x + width), y, (x + width), (y + width), z, obj_rails, false, false)
if ID
    zfloor = ID.z + 16
else
    zfloor = -128
if (z &lt; zfloor &amp;&amp; zprev &gt;= zfloor)
{
    z = zfloor
    zspeed = 0
    grav = 0
}
if (z &gt; zfloor || z &lt; (zfloor - 4))
    grav = 0.125
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var doit, doit2, ID;
doit = 1
if place_meeting(x, y, obj_mario)
{
    doit2 = 1
    with (obj_mario)
    {
        if place_meeting(x, y, par_floorwalls)
            doit2 = 0
    }
    if (obj_mario.ground &amp;&amp; obj_mario.z &lt;= (z + 4) &amp;&amp; doit2)
    {
        doit = 0
        if (obj_mario.x &gt; (x + width))
        {
            if (xspeed &lt; maxspeed)
                xspeed += acc
            index = 2
            destrot = -10
        }
        else
        {
            if (xspeed &gt; (-maxspeed))
                xspeed -= acc
            index = 1
            destrot = 10
        }
        ID = instance_place((x + xspeed), y, par_floor)
        if ID
        {
            move_contact_all(point_direction(0, 0, xspeed, 0), maxspeed)
            xspeed = 0
        }
        ID = instance_place(x, y, obj_mario)
        with (ID)
        {
            if (!(wall_detect((x + other.xspeed), y)))
                x += other.xspeed
            z = other.z
        }
    }
}
if doit
{
    if (abs(xspeed) &gt; (acc * 0.5))
        xspeed -= (sign(xspeed) * acc * 0.5)
    else
        xspeed = 0
    index = 0
    destrot = 0
}
if (rot != destrot)
    rot += ((destrot - rot) * 0.05)
ID = instance_place((x + xspeed), y, par_floor)
if ID
{
    move_contact_all(point_direction(0, 0, xspeed, 0), maxspeed)
    xspeed = 0
}
rot2 += ((-xspeed) * 2)
rot2 %= 360
if (zspeed &gt; 2)
    zspeed = 2
zprev = z
x += xspeed
z += zspeed
zspeed -= grav
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (point_distance(x, y, obj_cam.x, obj_cam.y) &lt; 480)
{
    d3d_transform_set_identity()
    d3d_transform_add_rotation_y(rot)
    d3d_transform_add_translation((x + width), (y + width * 0.5), z)
    d3d_draw_floor((-width), ((-width) * 0.5), 0, width, (width * 0.5), 0, sprite_get_texture(tex, index), 1, 1)
    d3d_draw_wall((-width), (width * 0.5), 0, width, (width * 0.5), -4, tex2, 8, 1)
    d3d_draw_wall((-width), ((-width) * 0.5), 0, (-width), (width * 0.5), -4, tex2, 4, 1)
    d3d_draw_wall(width, ((-width) * 0.5), 0, width, (width * 0.5), -4, tex2, 4, 1)
    d3d_transform_set_identity()
    d3d_transform_add_rotation_y(rot2)
    d3d_transform_add_translation((x + width), (y + width * 0.5), (z - 2))
    d3d_draw_wall((-cogw), ((-width) * 0.5 - 0.2), cogw, cogw, ((-width) * 0.5 - 0.2), (-cogw), tex3, 1, 1)
    d3d_draw_wall((-cogw), (width * 0.5 + 0.2), cogw, cogw, (width * 0.5 + 0.2), (-cogw), tex3, 1, 1)
    d3d_transform_set_identity()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
