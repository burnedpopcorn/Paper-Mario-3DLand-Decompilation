<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mask_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z = 0
zspeed = 0
grav = 0
xscale = 1
angle = 0
dir = 0
spd = 0
index = 0
timer_jump = 0
mariox = -1
marioy = -1
phase = 0
canbite = 1
height = 28
hp = 5
atk = 7
def = 2
weakstomp = 0
weakfire = 0
weakstone = 0
range = 32
tex = 137
tex2 = sprite_get_texture(tex_chain_chomp_chain, 0)
alarm[0] = 1
alarm[1] = 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>index = 0
grav = 0.125
timer_jump = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var destx, desty;
zspeed = 2
grav = 0.125
destx = xstart + (random_range((-range), range))
desty = ystart + (random_range((-range), range))
timer_jump = 2
dir = point_direction(x, y, destx, desty)
spd = (point_distance(x, y, destx, desty)) / 68
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z = (instance_find_top(x, y, par_floor)).z
zstart = z
zprev = z
zfloor = z
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ID;
if (global.World != 14)
    find_zfloor()
if (zfloor &lt; -16)
    zfloor = -16
if place_meeting(x, y, obj_arrow_platform)
{
    ID = instance_find_top(x, y, obj_arrow_platform)
    if (zfloor &lt; (ID.z + (max(0, ID.zspeed))))
        zfloor = ID.z + (max(0, ID.zspeed))
}
if (z &lt; zfloor)
{
    z = zfloor
    timer_jump -= 1
    if (timer_jump &gt; 0)
    {
        zspeed = 2
        grav = 0.125
    }
    else
    {
        timer_jump = 3
        zspeed = 0
        grav = 0
        spd = 0
        if (phase == 0)
            canbite = 1
        phase = 0
        alarm[1] = 120
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (xscale == 1 &amp;&amp; angle != 0)
    angle -= 9
if (xscale == -1 &amp;&amp; angle != 180)
    angle += 9
if (!(wall_detect((x + (lengthdir_x(spd, dir))), y)))
    x += lengthdir_x(spd, dir)
if (!(wall_detect(x, (y + (lengthdir_y(spd, dir))))))
    y += lengthdir_y(spd, dir)
zprev = z
z += zspeed
zspeed -= grav
if (abs(x - xprevious) != 0)
    xscale = sign(x - xprevious)
if instance_exists(obj_mario)
{
    if (point_distance(xstart, ystart, obj_mario.x, obj_mario.y) &lt; 128 &amp;&amp; phase == 0 &amp;&amp; canbite &amp;&amp; (!obj_mario.underground))
    {
        alarm[1] = -1
        timer_jump = 3
        dir = point_direction(x, y, obj_mario.x, obj_mario.y)
        spd = 4
        zspeed = (max(0, ((obj_mario.z - z) / (point_distance(x, y, obj_mario.x, obj_mario.y))))) * 4
        grav = 0
        phase = 1
        mariox = obj_mario.x
        marioy = obj_mario.y
        marioz = max(z, obj_mario.z)
        index = 1
        canbite = 0
    }
}
if (phase == 1 &amp;&amp; (point_distance(x, y, mariox, marioy) &lt; 4 || wall_detect((x + (lengthdir_x(spd, dir))), (y + (lengthdir_y(spd, dir))))))
{
    if (point_distance(x, y, mariox, marioy) &lt; 4)
    {
        x = mariox
        y = marioy
        z = marioz
    }
    spd = 0
    zspeed = 0
    phase = 2
    alarm[2] = 120
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var x1, y1, z1, x2, y2, z2, tdist, tdir, zdist, zdir, i, xx, yy, zz;
d3d_transform_set_identity()
d3d_transform_add_rotation_z(angle)
d3d_transform_add_translation(x, y, z)
d3d_draw_wall(-16, 0, 32, 16, 0, 0, sprite_get_texture(tex, index), 1, 1)
d3d_transform_set_identity()
if (zfloor &gt; -32)
    d3d_draw_shadow((x - 16), (y - 16), (zfloor + 0.2), (x + 16), (y + 16), (zfloor + 0.2), 1)
x1 = xstart
y1 = ystart
z1 = zstart
x2 = x
y2 = y
z2 = z
tdist = point_distance(x1, y1, x2, y2)
tdir = point_direction(x1, y1, x2, y2)
zdist = point_distance(x1, z1, x2, z2)
zdir = point_direction(x1, z1, x2, z2)
for (i = 0; i &lt; 6; i += 1)
{
    xx = x1 + (lengthdir_x((tdist / 6 * i), tdir))
    yy = y1 + (lengthdir_y((tdist / 6 * i), tdir))
    zz = z1 + (lengthdir_y((zdist / 6 * i), zdir))
    d3d_draw_wall((xx - 4), yy, (zz + 8), (xx + 4), yy, zz, tex2, 1, 1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
