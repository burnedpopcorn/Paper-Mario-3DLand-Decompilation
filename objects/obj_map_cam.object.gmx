<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i, j;
d3d_start()
z = 0
fac = 2.44
len = 165
render_interval = 30
if instance_exists(obj_map_mario)
{
    xto = obj_map_mario.x
    yto = obj_map_mario.y
    zto = obj_map_mario.z + 24
    x = xto
    y = yto + 128
    z = zto + 48
}
alarm[0] = render_interval
for (i = 0; i &lt; 528; i += 16)
{
    for (j = 0; j &lt; 336; j += 16)
    {
        tile[i, j] = d3d_floor_create_from_tile(i, j, 16, 16, 100)
        if (global.Level[15] &amp;&amp; tile_layer_find(99, i, j))
            tile[i, j] = d3d_floor_create_from_tile(i, j, 16, 16, 99)
    }
}
tex = background_get_texture(tex_map_tileset)
tex2 = background_get_texture(tex_cardboard_single)
tex3 = background_get_texture(tex_table)
tile_layer_hide(100)
tile_layer_hide(99)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_deactivate_all(true)
instance_activate_object(obj_gcontrol)
instance_activate_object(obj_map_hud)
instance_activate_object(obj_fade_in)
instance_activate_region((xto - 320), (yto - 640), 640, 1280, true)
alarm[0] = render_interval
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_map_mario)
{
    xto = obj_map_mario.x + 8
    yto = obj_map_mario.y + 8
    zto = 12
    x = xto
    y = yto + len
    z = zto + len / fac
}
view_xview[0] = xto - 320
view_yview[0] = yto - 180
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i, j;
fog_enable(false)
d3d_set_projection(x, y, z, xto, yto, zto, 0, 0, 1)
d3d_draw_cylinder((xto - 1024), (yto - 1024), zto, (xto + 1024), (yto + 1024), (zto - 950), background_get_texture(tex_map_bg), 24, 4, 0, 24)
fog_enable(true)
for (i = 0; i &lt; 528; i += 16)
{
    for (j = 0; j &lt; 336; j += 16)
        d3d_model_draw(tile[i, j], i, j, 0, tex)
}
d3d_draw_wall(0, 0, 0, 0, 336, -4, tex2, 21, 1)
d3d_draw_wall(0, 336, 0, 528, 336, -4, tex2, 33, 1)
d3d_draw_wall(528, 336, 0, 528, 0, -4, tex2, 21, 1)
d3d_draw_floor(-128, -128, -4, 640, 448, -4, tex3, 3, 2.25)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
