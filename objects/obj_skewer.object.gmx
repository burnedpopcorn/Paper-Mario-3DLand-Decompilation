<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z = 0
rot = 0
len = 32
yspeed = 0
grav = 0
atk = 9
drawlen = 192
alarm[0] = 60
alarm[5] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i, tlen, ID;
model = d3d_model_create()
d3d_model_primitive_begin(model, 5)
d3d_model_vertex_texture(model, 0, 0, 0, 0.5, 0.5)
for (i = 0; i &lt;= 8; i += 1)
{
    d3d_model_vertex_texture(model, lengthdir_x(len, (i * 45 + 22.5)), (-len), lengthdir_y(len, (i * 45 + 22.5)), (0.5 + (lengthdir_x(0.5, (i * 45 + 22.5)))), (0.5 + (lengthdir_y(0.5, (i * 45 + 22.5)))))
    d3d_model_vertex_texture(model, lengthdir_x(len, (i * 45 + 45 + 22.5)), (-len), lengthdir_y(len, (i * 45 + 45 + 22.5)), (0.5 + (lengthdir_x(0.5, (i * 45 + 45 + 22.5)))), (0.5 + (lengthdir_y(0.5, (i * 45 + 45 + 22.5)))))
    d3d_model_vertex_texture(model, lengthdir_x(len, (i * 45 + 22.5)), ((-len) - drawlen), lengthdir_y(len, (i * 45 + 22.5)), (0.5 + (lengthdir_x(0.5, (i * 45 + 22.5)))), (0.5 + (lengthdir_y(0.5, (i * 45 + 22.5)))))
    d3d_model_vertex_texture(model, lengthdir_x(len, (i * 45 + 45 + 22.5)), ((-len) - drawlen), lengthdir_y(len, (i * 45 + 45 + 22.5)), (0.5 + (lengthdir_x(0.5, (i * 45 + 45 + 22.5)))), (0.5 + (lengthdir_y(0.5, (i * 45 + 45 + 22.5)))))
    d3d_model_vertex_texture(model, 0, 0, 0, 0.5, 0.5)
}
d3d_model_primitive_end(model)
house = d3d_model_create()
d3d_model_primitive_begin(house, 4)
tlen = len + 27
for (i = 0; i &lt; 8; i += 1)
{
    d3d_model_vertex_texture(house, lengthdir_x(tlen, (i * 45 + 22.5)), ((-len) - drawlen), lengthdir_y(tlen, (i * 45 + 22.5)), (i / 8), 0)
    d3d_model_vertex_texture(house, lengthdir_x(tlen, (i * 45 + 22.5)), (-len), lengthdir_y(tlen, (i * 45 + 22.5)), (i / 8), 1)
    d3d_model_vertex_texture(house, lengthdir_x(tlen, (i * 45 + 45 + 22.5)), ((-len) - drawlen), lengthdir_y(tlen, (i * 45 + 45 + 22.5)), (i / 8 + 0.125), 0)
    d3d_model_vertex_texture(house, lengthdir_x(tlen, (i * 45 + 22.5)), (-len), lengthdir_y(tlen, (i * 45 + 22.5)), (i / 8), 1)
    d3d_model_vertex_texture(house, lengthdir_x(tlen, (i * 45 + 45 + 22.5)), ((-len) - drawlen), lengthdir_y(tlen, (i * 45 + 45 + 22.5)), (i / 8 + 0.125), 0)
    d3d_model_vertex_texture(house, lengthdir_x(tlen, (i * 45 + 45 + 22.5)), (-len), lengthdir_y(tlen, (i * 45 + 45 + 22.5)), (i / 8 + 0.125), 1)
}
d3d_model_primitive_end(house)
housefront = d3d_model_create()
d3d_model_primitive_begin(housefront, 6)
d3d_model_vertex_texture(housefront, 0, (-len), 0, 0.5, 0.5)
for (i = 0; i &lt;= 8; i += 1)
    d3d_model_vertex_texture(housefront, lengthdir_x(tlen, (i * 45 + 22.5)), (-len), lengthdir_y(tlen, (i * 45 + 22.5)), (0.5 + (lengthdir_x(0.5, (i * 45 + 22.5)))), (0.5 + (lengthdir_y(0.5, (i * 45 + 22.5)))))
d3d_model_primitive_end(housefront)
house2 = d3d_model_create()
d3d_model_primitive_begin(house2, 4)
tlen = len + 33
for (i = 0; i &lt; 8; i += 1)
{
    d3d_model_vertex_texture(house2, lengthdir_x(tlen, (i * 45 + 22.5)), ((-len) - drawlen), lengthdir_y(tlen, (i * 45 + 22.5)), (i / 8), 0)
    d3d_model_vertex_texture(house2, lengthdir_x(tlen, (i * 45 + 22.5)), ((-len) - 12), lengthdir_y(tlen, (i * 45 + 22.5)), (i / 8), 1)
    d3d_model_vertex_texture(house2, lengthdir_x(tlen, (i * 45 + 45 + 22.5)), ((-len) - drawlen), lengthdir_y(tlen, (i * 45 + 45 + 22.5)), (i / 8 + 0.125), 0)
    d3d_model_vertex_texture(house2, lengthdir_x(tlen, (i * 45 + 22.5)), ((-len) - 12), lengthdir_y(tlen, (i * 45 + 22.5)), (i / 8), 1)
    d3d_model_vertex_texture(house2, lengthdir_x(tlen, (i * 45 + 45 + 22.5)), ((-len) - drawlen), lengthdir_y(tlen, (i * 45 + 45 + 22.5)), (i / 8 + 0.125), 0)
    d3d_model_vertex_texture(house2, lengthdir_x(tlen, (i * 45 + 45 + 22.5)), ((-len) - 12), lengthdir_y(tlen, (i * 45 + 45 + 22.5)), (i / 8 + 0.125), 1)
}
d3d_model_primitive_end(house2)
housefront2 = d3d_model_create()
d3d_model_primitive_begin(housefront2, 6)
d3d_model_vertex_texture(housefront2, 0, ((-len) - 12), 0, 0.5, 0.5)
for (i = 0; i &lt;= 8; i += 1)
    d3d_model_vertex_texture(housefront2, lengthdir_x(tlen, (i * 45 + 22.5)), ((-len) - 12), lengthdir_y(tlen, (i * 45 + 22.5)), (0.5 + (lengthdir_x(0.5, (i * 45 + 22.5)))), (0.5 + (lengthdir_y(0.5, (i * 45 + 22.5)))))
d3d_model_primitive_end(housefront2)
tex = background_get_texture(tex_skewer)
tex2 = background_get_texture(tex_skewer_house)
tex3 = background_get_texture(tex_skewer_house_2)
tex4 = background_get_texture(tex_skewer_house_front)
tex5 = background_get_texture(tex_skewer_house_front_2)
blue = make_color_rgb(29, 69, 138)
yellow = make_color_rgb(233, 197, 77)
ID = instance_create((x - 37), (y - 80), obj_propeller_top)
ID.z = z + len + 15
ID = instance_create((x + 37), (y - 80), obj_propeller_top)
ID.z = z + len + 15
ID = instance_create(x, y, obj_wall)
tlen = lengthdir_x(tlen, 22.5)
ID.x = x - tlen
ID.image_xscale = tlen * 2 / 32
ID.y = y - len - drawlen
ID.image_yscale = drawlen / 32
ID.z = z + tlen
ID.bottom = z - tlen
ID.dir = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>y = ystart
rot = 0
yspeed = 0
alarm[0] = 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>yspeed = -1.5
alarm[4] = 128
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grav = 0.5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>yspeed = 0
grav = 0
alarm[2] = 30
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>yspeed = 1
alarm[1] = 16
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (y &gt; (ystart + 192))
{
    y = ystart + 192
    yspeed = 0
    grav = 0
    alarm[3] = 60
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ID;
y += yspeed
rot += (yspeed - 0.08203125 * (yspeed &lt; 0))
yspeed += grav
ID = collision_rectangle((x - len * 0.8), (ystart - len - 256), (x + len * 0.8), (y - len), obj_mario, 0, 0)
if ID
{
    if ((ID.z + ID.height) &gt;= (z - len * 0.8) &amp;&amp; ID.z &lt;= (z + len * 0.8) &amp;&amp; (!ID.invincible))
    {
        with (ID)
        {
            global.Powerup = 0
            invincible = 1
            timer_flash = 15
            hp -= max(0, (other.atk - def))
            ID2 = instance_create(x, y, obj_damage_star)
            ID2.z = z
            ID2.hurtplayer = 1
            ID2.damage = max(0, (other.atk - def))
            with (ID2)
                event_user(0)
            alarm[1] = 5
            play_sfx(sfx_damage)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i, j;
if (point_distance(x, y, obj_cam.x, obj_cam.y) &lt; 480)
{
    d3d_model_draw(house, x, ystart, z, tex2)
    d3d_model_draw(house2, x, ystart, z, tex3)
    d3d_model_draw(housefront, x, ystart, z, tex4)
    d3d_model_draw(housefront2, x, ystart, z, tex5)
    d3d_transform_set_identity()
    d3d_transform_add_rotation_y(rot)
    d3d_transform_add_translation(x, y, z)
    d3d_model_draw(model, 0, 0, 0, tex)
    draw_set_color(yellow)
    for (i = 0; i &lt; 4; i += 1)
    {
        for (j = 0; j &lt; 9; j += 1)
        {
            d3d_transform_set_identity()
            d3d_transform_add_rotation_y(rot + j * 45)
            d3d_transform_add_translation(x, y, z)
            d3d_draw_cone(-10, (-88 - i * 48 + 24 * (j % 2) != 0), (len - 4), 10, (-68 - i * 48 + 24 * (j % 2) != 0), (len + 16), -1, 1, 1, 0, 6)
        }
    }
    draw_set_color(c_white)
    d3d_transform_set_identity()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
