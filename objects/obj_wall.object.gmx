<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_floor_0</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bottom = -128
culling = 0
amount = -1
drawbottom = bottom
xxadd = 0
draw = 0
if (global.World == 0)
{
    tex1 = background_get_texture(tex_w1_wall_top)
    tex2 = background_get_texture(tex_w1_wall)
}
if (global.World == 1)
{
    tex1 = background_get_texture(tex_w2_wall)
    tex2 = background_get_texture(tex_w2_wall)
}
if (global.World == 2)
{
    tex1 = background_get_texture(tex_w3_wall_top)
    tex2 = background_get_texture(tex_w3_wall)
}
if (global.World == 3)
{
    tex1 = background_get_texture(tex_w4_wall)
    tex2 = background_get_texture(tex_w4_wall)
}
if (global.World == 4)
{
    tex1 = background_get_texture(tex_w5_wall_top)
    tex2 = background_get_texture(tex_w5_wall)
}
if (global.World == 5)
{
    tex1 = background_get_texture(tex_w6_bigwall)
    tex2 = background_get_texture(tex_w6_bigwall_top)
    tex3 = background_get_texture(tex_w6_wall)
    tex4 = background_get_texture(tex_w6_wall)
    tex5 = background_get_texture(tex_w6_wall_bottom)
}
if (global.World == 6)
{
    tex = 68
    myrandom[0] = -1
}
if (global.World == 7)
{
    tex1 = background_get_texture(tex_w8_wall)
    tex2 = background_get_texture(tex_w8_wall)
}
if (global.World == 8)
{
    tex1 = background_get_texture(tex_w9_wall_top)
    tex2 = background_get_texture(tex_w9_wall)
}
if (global.World == 9)
{
    tex1 = background_get_texture(tex_w10_bigwall)
    tex2 = background_get_texture(tex_w10_bigwall_top)
    tex3 = background_get_texture(tex_w10_wall)
    tex4 = background_get_texture(tex_w10_wall)
    tex5 = background_get_texture(tex_w10_wall_bottom)
}
if (global.World == 10)
{
    tex1 = background_get_texture(tex_w11_wall_small)
    tex2 = background_get_texture(tex_w11_wall_small)
}
if (global.World == 11)
{
    tex1 = sprite_get_texture(tex_w12_wall_front_2, 1)
    tex2 = sprite_get_texture(tex_w12_wall_front_2, 1)
}
if (global.World == 12)
    tex = background_get_texture(tex_w13_wall_tileset)
if (global.World == 13)
{
    tex1 = background_get_texture(tex_w14_wall_top)
    tex2 = background_get_texture(tex_w14_wall)
    tex3 = background_get_texture(tex_w14_stones)
}
if (global.World == 14)
    tex = background_get_texture(tex_w15_wall_tileset)
if (global.World == 15)
    tex = background_get_texture(tex_w16_wall_tileset)
if (global.World == 16)
{
    tex1 = background_get_texture(tex_w16a_wall)
    tex2 = background_get_texture(tex_w16a_wall)
}
setbottom = 1
alarm[0] = 1
alarm[1] = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var twothirds, dist, ID, xx, yy, offset, i, xadd, yadd, xaddfac, ID3, ID2;
if ((global.World == 7 || global.World == 12 || global.World == 14 || global.World == 15) &amp;&amp; dir != -1)
{
    twothirds = 0.66
    if (global.World == 15)
        twothirds = (2/3)
    dist = 16 + 16 * (global.World != 7)
    amount = (abs(z - drawbottom)) / dist
    if (global.World == 7)
        tex = background_get_texture(tex_box_borders)
    ID = tile_layer_find(100, x, y)
    if (ID &amp;&amp; global.World == 7)
    {
        xx = tile_get_left(ID)
        yy = tile_get_top(ID)
        if ((xx == 32 || yy &lt;= 32) &amp;&amp; xx &lt;= 64 &amp;&amp; yy &lt;= 64)
        {
            if (xx == 32 &amp;&amp; (dir == 0 || dir == 180))
                tex = background_get_texture(tex_w8_carpet)
            if (yy &lt;= 32 &amp;&amp; dir == 270)
                tex = background_get_texture(tex_w8_carpet)
        }
    }
    offset = 0.1 * (global.World == 7)
    for (i = 0; i &lt; amount; i += 1)
    {
        xadd = 0
        yadd = -0.3333333333333333 * (i == 0) + (1/3) * (i == (amount - 1) &amp;&amp; i != 0 &amp;&amp; global.World != 12 &amp;&amp; global.World != 15)
        xaddfac = (1/3)
        if (global.World == 14 || global.World == 15)
            xaddfac = 0.25
        if (global.World == 14)
        {
            if (i == 0 &amp;&amp; i == (amount - 1))
                yadd = (1/3)
        }
        model[i] = d3d_model_create()
        d3d_model_primitive_begin(model[i], 5)
        switch dir
        {
            case 0:
                ID = instance_find_bottom(x, (y - 32), obj_wall)
                if (!ID)
                    xadd = xaddfac
                else if (ID.z != z)
                    xadd = xaddfac
                else if (global.World == 14)
                {
                    ID.x += 2000
                    if (ID.bottom != bottom &amp;&amp; ID.dir == dir)
                        xadd = xaddfac
                    else
                    {
                        ID3 = instance_place(x, (y - 32), obj_wall)
                        if ID3
                        {
                            if (ID3.bottom != bottom &amp;&amp; ID3.dir == dir)
                                xadd = xaddfac
                        }
                    }
                    ID.x -= 2000
                }
                ID2 = instance_find_bottom(x, (y + 32), obj_wall)
                if (!ID2)
                    xadd = (-xaddfac)
                else if (ID2.z != z)
                    xadd = (-xaddfac)
                else if (global.World == 14)
                {
                    ID2.x += 2000
                    if (ID2.bottom != bottom &amp;&amp; ID2.dir == dir)
                        xadd = (-xaddfac)
                    else
                    {
                        ID3 = instance_place(x, (y + 32), obj_wall)
                        if ID3
                        {
                            if (ID3.bottom != bottom &amp;&amp; ID3.dir == dir)
                                xadd = (-xaddfac)
                        }
                    }
                    ID2.x -= 2000
                }
                if ((!ID) &amp;&amp; (!ID2))
                    xadd = xaddfac * 2
                if (ID &amp;&amp; (!ID2))
                {
                    if (ID.z != z)
                        xadd = xaddfac * 2
                }
                if (ID2 &amp;&amp; (!ID))
                {
                    if (ID2.z != z)
                        xadd = xaddfac * 2
                }
                if (ID &amp;&amp; ID2)
                {
                    if (ID.z != z &amp;&amp; ID2.z != z)
                        xadd = xaddfac * 2
                }
                d3d_model_vertex_texture(model[i], (x + 32 + offset), (y + 32), (z - i * dist), (xaddfac + xadd), ((1/3) + yadd))
                d3d_model_vertex_texture(model[i], (x + 32 + offset), y, (z - i * dist), (xaddfac * 2 + xadd), ((1/3) + yadd))
                d3d_model_vertex_texture(model[i], (x + 32 + offset), (y + 32), (z - i * dist - dist), (xaddfac + xadd), (twothirds + yadd))
                d3d_model_vertex_texture(model[i], (x + 32 + offset), y, (z - i * dist - dist), (xaddfac * 2 + xadd), (twothirds + yadd))
                break
            case 180:
                ID = instance_find_bottom(x, (y - 32), obj_wall)
                if (!ID)
                    xadd = (-xaddfac)
                else if (ID.z != z)
                    xadd = (-xaddfac)
                else if (global.World == 14)
                {
                    ID.x += 2000
                    if (ID.bottom != bottom &amp;&amp; ID.dir == dir)
                        xadd = (-xaddfac)
                    else
                    {
                        ID3 = instance_place(x, (y - 32), obj_wall)
                        if ID3
                        {
                            if (ID3.bottom != bottom &amp;&amp; ID3.dir == dir)
                                xadd = (-xaddfac)
                        }
                    }
                    ID.x -= 2000
                }
                ID2 = instance_find_bottom(x, (y + 32), obj_wall)
                if (!ID2)
                    xadd = xaddfac
                else if (ID2.z != z)
                    xadd = xaddfac
                else if (global.World == 14)
                {
                    ID2.x += 2000
                    if (ID2.bottom != bottom &amp;&amp; ID2.dir == dir)
                        xadd = xaddfac
                    else
                    {
                        ID3 = instance_place(x, (y + 32), obj_wall)
                        if ID3
                        {
                            if (ID3.bottom != bottom &amp;&amp; ID3.dir == dir)
                                xadd = xaddfac
                        }
                    }
                    ID2.x -= 2000
                }
                if ((!ID) &amp;&amp; (!ID2))
                    xadd = xaddfac * 2
                if (ID &amp;&amp; (!ID2))
                {
                    if (ID.z != z)
                        xadd = xaddfac * 2
                }
                if (ID2 &amp;&amp; (!ID))
                {
                    if (ID2.z != z)
                        xadd = xaddfac * 2
                }
                if (ID &amp;&amp; ID2)
                {
                    if (ID.z != z &amp;&amp; ID2.z != z)
                        xadd = xaddfac * 2
                }
                d3d_model_vertex_texture(model[i], (x - offset), y, (z - i * dist), (xaddfac + xadd), ((1/3) + yadd))
                d3d_model_vertex_texture(model[i], (x - offset), (y + 32), (z - i * dist), (xaddfac * 2 + xadd), ((1/3) + yadd))
                d3d_model_vertex_texture(model[i], (x - offset), y, (z - i * dist - dist), (xaddfac + xadd), (twothirds + yadd))
                d3d_model_vertex_texture(model[i], (x - offset), (y + 32), (z - i * dist - dist), (xaddfac * 2 + xadd), (twothirds + yadd))
                break
            case 270:
                ID = instance_find_bottom((x - 32), y, obj_wall)
                if ((!ID) || xxadd == (-xaddfac))
                    xadd = (-xaddfac)
                else if (ID.z != z)
                    xadd = (-xaddfac)
                else if (global.World == 14)
                {
                    ID.x += 2000
                    if (ID.bottom != bottom &amp;&amp; ID.dir == dir)
                        xadd = (-xaddfac)
                    else
                    {
                        ID3 = instance_place((x - 32), y, obj_wall)
                        if ID3
                        {
                            if (ID3.bottom != bottom &amp;&amp; ID3.dir == dir)
                                xadd = (-xaddfac)
                        }
                    }
                    ID.x -= 2000
                }
                ID2 = instance_find_bottom((x + 32), y, obj_wall)
                if ((!ID2) || xxadd == xaddfac)
                    xadd = xaddfac
                else if (ID2.z != z)
                    xadd = xaddfac
                else if (global.World == 14)
                {
                    ID2.x += 2000
                    if (ID2.bottom != bottom &amp;&amp; ID2.dir == dir)
                        xadd = xaddfac
                    else
                    {
                        ID3 = instance_place((x + 32), y, obj_wall)
                        if ID3
                        {
                            if (ID3.bottom != bottom &amp;&amp; ID3.dir == dir)
                                xadd = xaddfac
                        }
                    }
                    ID2.x -= 2000
                }
                if ((!ID) &amp;&amp; (!ID2))
                    xadd = xaddfac * 2
                if (ID &amp;&amp; (!ID2))
                {
                    if (ID.z != z)
                        xadd = xaddfac * 2
                }
                if (ID2 &amp;&amp; (!ID))
                {
                    if (ID2.z != z)
                        xadd = xaddfac * 2
                }
                if (ID &amp;&amp; ID2)
                {
                    if (ID.z != z &amp;&amp; ID2.z != z)
                        xadd = xaddfac * 2
                }
                d3d_model_vertex_texture(model[i], x, (y + 32 + offset), (z - i * dist), (xaddfac + xadd), ((1/3) + yadd))
                d3d_model_vertex_texture(model[i], (x + 32), (y + 32 + offset), (z - i * dist), (xaddfac * 2 + xadd), ((1/3) + yadd))
                d3d_model_vertex_texture(model[i], x, (y + 32 + offset), (z - i * dist - dist), (xaddfac + xadd), (twothirds + yadd))
                d3d_model_vertex_texture(model[i], (x + 32), (y + 32 + offset), (z - i * dist - dist), (xaddfac * 2 + xadd), (twothirds + yadd))
                break
        }

        d3d_model_primitive_end(model[i])
    }
}
draw = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ID, tile, doit, j, i, add;
bottom = max(-128, bottom)
if (global.World == 6)
    bottom = max(-64, bottom)
if (global.World == 7)
    bottom = max(0, bottom)
if (global.World == 10)
{
    ID = instance_place(x, y, obj_bottomsetter)
    if (ID &amp;&amp; dir != -1)
    {
        tex1 = background_get_texture(tex_w11_wall_top)
        tex2 = background_get_texture(tex_w11_wall)
        tex3 = background_get_texture(tex_w11_wall_bottom)
        bottom = ID.bottom
    }
    else
        bottom = z - 16
}
drawbottom = bottom
if (global.World == 11 &amp;&amp; dir != -1)
{
    tile = tile_layer_find(100, x, y)
    doit = 0
    if tile
    {
        if (tile_get_left(tile) != 32)
            doit = 1
    }
    if ((dir != 270 &amp;&amp; bottom == -128) || doit)
    {
        tex1 = background_get_texture(tex_w12_wall)
        tex2 = background_get_texture(tex_w12_wall)
    }
    if (dir == 270)
    {
        tile = tile_layer_find(100, x, y)
        if tile
        {
            if (bottom == -128)
                tex1 = sprite_get_texture(tex_w12_wall_front, (tile_get_left(tile) / 32))
            else
                tex1 = sprite_get_texture(tex_w12_wall_front_2, (tile_get_left(tile) / 32))
        }
    }
    if (bottom == -128)
    {
        bottom = z - 24
        if (dir != 270)
            drawbottom = z - 16
    }
}
ID = instance_place(x, y, obj_bottomsetter)
if (ID &amp;&amp; setbottom)
{
    drawbottom = ID.bottom
    if ((global.World == 10 &amp;&amp; dir != -1) || (global.World == 11 &amp;&amp; dir != 270 &amp;&amp; dir != -1) || global.World == 14 || global.World == 16)
        bottom = ID.bottom
}
ID = instance_place(x, y, obj_xaddsetter)
if ID
    xxadd = ID.xadd
if (global.World == 6)
{
    j = 0
    random_set_seed(id)
    for (i = z; i &gt; bottom; i -= 32)
    {
        myrandom[j] = irandom(8)
        ID = instance_place(x, y, obj_bigtilesetter)
        if ID
        {
            if (dir == 0 || dir == 180)
                add = ID.add
            else
                add = ID.add3
            if (dir != 270)
            {
                if (j == 0)
                    myrandom[j] = 8 + (!(((x == ID.x) ^ (y != ID.y)))) + add
                if (j == 1)
                    myrandom[j] = 24 + (!(((x == ID.x) ^ (y != ID.y)))) + add
            }
            else
            {
                if (j == 0)
                    myrandom[j] = 8 + ((x == ID.x) ^ (y != ID.y)) + add
                if (j == 1)
                    myrandom[j] = 24 + ((x == ID.x) ^ (y != ID.y)) + add
            }
        }
        j += 1
    }
    randomize()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var t, ttex, i, j, theight;
if (point_distance(x, y, obj_cam.x, obj_cam.y) &lt; (1024 - 512 * (global.World == 14)) &amp;&amp; draw)
{
    if (!global.Split)
    {
        if (global.World != -1)
        {
            d3d_set_culling(culling)
            switch dir
            {
                case 0:
                    d3d_set_lighting(1)
                    d3d_light_define_ambient(make_color_rgb(191, 191, 191))
                    if (global.World != 6)
                    {
                        if (global.World == 10 &amp;&amp; bottom != (z - 16))
                        {
                            d3d_draw_wall((x + 32), (y + 32), z, (x + 32), y, (z - 16), tex1, 1, 1)
                            d3d_draw_wall((x + 32), (y + 32), (z - 16), (x + 32), y, (z - 32 - ((abs(z - bottom)) / 16 - 3) * 16), tex2, 1, 1)
                            d3d_draw_wall((x + 32), (y + 32), (bottom + 16), (x + 32), y, bottom, tex3, 1, 1)
                        }
                        else if (global.World != 12 &amp;&amp; global.World != 14 &amp;&amp; global.World != 15)
                        {
                            t = 32 - 16 * (global.World == 11 &amp;&amp; (dir != 270 || bottom != (z - 24)))
                            ttex = tex2
                            if (global.World == 11)
                                ttex = tex1
                            if (global.World == 13)
                                d3d_draw_wall((x + 32), (y + 32), (z + 8), (x + 32), y, z, tex3, 2, 1)
                            d3d_draw_wall((x + 32), (y + 32), z, (x + 32), y, max((z - t), drawbottom), tex1, 1, (1 - 0.5 * (drawbottom &gt; (z - t)) * (global.World != 11)))
                            if (bottom &lt; (z - t))
                                d3d_draw_wall((x + 32), (y + 32), (z - t), (x + 32), y, drawbottom, ttex, 1, ((z - t - drawbottom) / t))
                        }
                        if ((global.World == 7 || global.World == 12 || global.World == 14 || global.World == 15) &amp;&amp; amount != -1)
                        {
                            for (i = 0; i &lt; amount; i += 1)
                                d3d_model_draw(model[i], 0, 0, 0, tex)
                        }
                    }
                    else if (myrandom[0] != -1)
                    {
                        d3d_light_define_ambient(make_color_rgb(87, 48, 0))
                        d3d_draw_wall((x + 32), (y + 32), z, (x + 32), y, max((z - 32), bottom), sprite_get_texture(tex, myrandom[0]), 1, (1 - 0.5 * (bottom &gt; (z - 32))))
                        j = 1
                        for (i = z - 32; i &gt; bottom; i -= 32)
                        {
                            d3d_draw_wall((x + 32), (y + 32), i, (x + 32), y, (i - 32), sprite_get_texture(tex, myrandom[j]), 1, 1)
                            j += 1
                        }
                    }
                    d3d_light_define_ambient(0)
                    d3d_set_lighting(0)
                    if culling
                    {
                        draw_set_color(background_color)
                        d3d_draw_wall((x + 32), y, bottom, (x + 32), (y + 32), -128, -1, 1, 1)
                        draw_set_color(c_white)
                    }
                    break
                case 180:
                    d3d_set_lighting(1)
                    d3d_light_define_ambient(make_color_rgb(191, 191, 191))
                    if (global.World != 6)
                    {
                        if (global.World == 10 &amp;&amp; bottom != (z - 16))
                        {
                            d3d_draw_wall(x, y, z, x, (y + 32), (z - 16), tex1, 1, 1)
                            d3d_draw_wall(x, y, (z - 16), x, (y + 32), (z - 32 - ((abs(z - bottom)) / 16 - 3) * 16), tex2, 1, 1)
                            d3d_draw_wall(x, y, (bottom + 16), x, (y + 32), bottom, tex3, 1, 1)
                        }
                        else if (global.World != 12 &amp;&amp; global.World != 14 &amp;&amp; global.World != 15)
                        {
                            t = 32 - 16 * (global.World == 11 &amp;&amp; (dir != 270 || bottom != (z - 24)))
                            ttex = tex2
                            if (global.World == 11)
                                ttex = tex1
                            if (global.World == 13)
                                d3d_draw_wall(x, y, (z + 8), x, (y + 32), z, tex3, 2, 1)
                            d3d_draw_wall(x, y, z, x, (y + 32), max((z - t), drawbottom), tex1, 1, (1 - 0.5 * (drawbottom &gt; (z - t)) * (global.World != 11)))
                            if (bottom &lt; (z - t))
                                d3d_draw_wall(x, y, (z - t), x, (y + 32), drawbottom, ttex, 1, ((z - t - drawbottom) / t))
                        }
                        if ((global.World == 7 || global.World == 12 || global.World == 14 || global.World == 15) &amp;&amp; amount != -1)
                        {
                            for (i = 0; i &lt; amount; i += 1)
                                d3d_model_draw(model[i], 0, 0, 0, tex)
                        }
                    }
                    else if (myrandom[0] != -1)
                    {
                        d3d_light_define_ambient(make_color_rgb(87, 48, 0))
                        d3d_draw_wall(x, y, z, x, (y + 32), max((z - 32), bottom), sprite_get_texture(tex, myrandom[0]), 1, (1 - 0.5 * (bottom &gt; (z - 32))))
                        j = 1
                        for (i = z - 32; i &gt; bottom; i -= 32)
                        {
                            d3d_draw_wall(x, y, i, x, (y + 32), (i - 32), sprite_get_texture(tex, myrandom[j]), 1, 1)
                            j += 1
                        }
                    }
                    d3d_light_define_ambient(0)
                    d3d_set_lighting(0)
                    if culling
                    {
                        draw_set_color(background_color)
                        d3d_draw_wall(x, (y + 32), bottom, x, y, -128, -1, 1, 1)
                        draw_set_color(c_white)
                    }
                    break
                case 90:
                    if (global.World == 13)
                        d3d_draw_wall((x + 32), y, (z + 8), x, y, z, tex3, 2, 1)
                    break
                case 270:
                    if (global.World != 6)
                    {
                        if (global.World == 10 &amp;&amp; bottom != (z - 16))
                        {
                            d3d_draw_wall(x, (y + 32), z, (x + 32), (y + 32), (z - 16), tex1, 1, 1)
                            d3d_draw_wall(x, (y + 32), (z - 16), (x + 32), (y + 32), (z - 32 - ((abs(z - bottom)) / 16 - 3) * 16), tex2, 1, 1)
                            d3d_draw_wall(x, (y + 32), (bottom + 16), (x + 32), (y + 32), bottom, tex3, 1, 1)
                        }
                        else if (global.World != 12 &amp;&amp; global.World != 14 &amp;&amp; global.World != 15)
                        {
                            t = 32 - 16 * (global.World == 11 &amp;&amp; (dir != 270 || bottom != (z - 24)))
                            ttex = tex2
                            if (global.World == 11)
                                ttex = tex1
                            if (global.World == 13)
                                d3d_draw_wall(x, (y + 32), (z + 8), (x + 32), (y + 32), z, tex3, 2, 1)
                            d3d_draw_wall(x, (y + 32), z, (x + 32), (y + 32), max((z - t), bottom), tex1, 1, (1 - 0.5 * (bottom &gt; (z - t)) * (global.World != 11)))
                            if (bottom &lt; (z - t))
                                d3d_draw_wall(x, (y + 32), (z - t), (x + 32), (y + 32), bottom, ttex, 1, ((z - t - bottom) / t))
                        }
                        if ((global.World == 7 || global.World == 12 || global.World == 14 || global.World == 15) &amp;&amp; amount != -1)
                        {
                            for (i = 0; i &lt; amount; i += 1)
                                d3d_model_draw(model[i], 0, 0, 0, tex)
                        }
                    }
                    else if (myrandom[0] != -1)
                    {
                        d3d_set_lighting(1)
                        d3d_light_define_ambient(make_color_rgb(130, 71, 0))
                        d3d_draw_wall(x, (y + 32), z, (x + 32), (y + 32), max((z - 32), bottom), sprite_get_texture(tex, myrandom[0]), 1, (1 - 0.5 * (bottom &gt; (z - 32))))
                        j = 1
                        for (i = z - 32; i &gt; bottom; i -= 32)
                        {
                            d3d_draw_wall(x, (y + 32), i, (x + 32), (y + 32), (i - 32), sprite_get_texture(tex, myrandom[j]), 1, 1)
                            j += 1
                        }
                        d3d_light_define_ambient(0)
                        d3d_set_lighting(0)
                    }
                    break
                default:
                    if (dir == -1 &amp;&amp; culling)
                    {
                        draw_set_color(background_color)
                        d3d_draw_wall(x, y, bottom, (x + 32), y, -128, -1, 1, 1)
                        draw_set_color(c_white)
                    }
                    break
            }

            d3d_set_culling(0)
        }
    }
    else
    {
        d3d_set_culling(culling)
        switch dir
        {
            case 0:
                if (((x + 32) % 96) == 0 &amp;&amp; (y % 96) == 0)
                {
                    d3d_set_lighting(1)
                    d3d_light_define_ambient(make_color_rgb(191, 191, 191))
                    if (!(place_meeting(x, y, par_floorwalls)))
                    {
                        d3d_draw_wall((x + 32), (y + 96), ((max(0, drawbottom)) + 96), (x + 32), y, max(0, drawbottom), tex1, 1, 1)
                        theight = 512 - 400 * (global.World == 9)
                        if (drawbottom &gt;= (theight - 32))
                            theight += 112
                        d3d_draw_wall((x + 32), (y + 96), theight, (x + 32), y, ((max(0, drawbottom)) + 96), tex2, 1, ((abs(theight - (bottom + 96))) / 32))
                    }
                    else if (bottom != -128)
                    {
                        d3d_draw_wall((x + 32), (y + 96), z, (x + 32), y, max((z - 32), bottom), tex3, 3, (1 - 0.5 * (bottom &gt; (z - 32))))
                        if (bottom &lt; (z - 32))
                            d3d_draw_wall((x + 32), (y + 96), (z - 32), (x + 32), y, bottom, tex4, 3, ((z - 32 - bottom) / 32))
                    }
                    if (bottom == -128)
                        d3d_draw_wall((x + 32), (y + 96), drawbottom, (x + 32), y, (drawbottom - 32), tex5, 1, 1)
                    d3d_light_define_ambient(0)
                    d3d_set_lighting(0)
                    if culling
                    {
                        draw_set_color(background_color)
                        d3d_draw_wall((x + 32), y, bottom, (x + 32), (y + 96), -128, -1, 1, 1)
                        draw_set_color(c_white)
                    }
                }
                break
            case 180:
                if ((x % 96) == 0 &amp;&amp; (y % 96) == 0)
                {
                    d3d_set_lighting(1)
                    d3d_light_define_ambient(make_color_rgb(191, 191, 191))
                    if (!(place_meeting(x, y, par_floorwalls)))
                    {
                        d3d_draw_wall(x, y, ((max(0, drawbottom)) + 96), x, (y + 96), max(0, drawbottom), tex1, 1, 1)
                        theight = 512 - 400 * (global.World == 9)
                        if (drawbottom &gt;= (theight - 32))
                            theight += 112
                        d3d_draw_wall(x, y, theight, x, (y + 96), ((max(0, drawbottom)) + 96), tex2, 1, ((abs(theight - (bottom + 96))) / 32))
                    }
                    else if (bottom != -128)
                    {
                        d3d_draw_wall(x, y, z, x, (y + 96), max((z - 32), bottom), tex3, 3, (1 - 0.5 * (bottom &gt; (z - 32))))
                        if (bottom &lt; (z - 32))
                            d3d_draw_wall(x, y, (z - 32), x, (y + 96), bottom, tex4, 3, ((z - 32 - bottom) / 32))
                    }
                    if (bottom == -128)
                        d3d_draw_wall(x, y, drawbottom, x, (y + 96), (drawbottom - 32), tex5, 1, 1)
                    d3d_light_define_ambient(0)
                    d3d_set_lighting(0)
                    if culling
                    {
                        draw_set_color(background_color)
                        d3d_draw_wall(x, (y + 96), bottom, x, y, -128, -1, 1, 1)
                        draw_set_color(c_white)
                    }
                }
                break
            case 90:
                break
            case 270:
                if ((x % 96) == 0 &amp;&amp; ((y + 32) % 96) == 0)
                {
                    if (!(place_meeting(x, y, par_floorwalls)))
                    {
                        d3d_draw_wall(x, (y + 32), ((max(0, drawbottom)) + 96), (x + 96), (y + 32), max(0, drawbottom), tex1, 1, 1)
                        theight = 512 - 400 * (global.World == 9)
                        if (drawbottom &gt;= (theight - 32))
                            theight += 112
                        d3d_draw_wall(x, (y + 32), theight, (x + 96), (y + 32), ((max(0, drawbottom)) + 96), tex2, 1, ((abs(theight - (bottom + 96))) / 32))
                    }
                    else if (bottom != -128)
                    {
                        d3d_draw_wall(x, (y + 32), z, (x + 96), (y + 32), max((z - 32), bottom), tex3, 3, (1 - 0.5 * (bottom &gt; (z - 32))))
                        if (bottom &lt; (z - 32))
                            d3d_draw_wall(x, (y + 32), (z - 32), (x + 96), (y + 32), bottom, tex4, 3, ((z - 32 - bottom) / 32))
                    }
                    if (bottom == -128)
                        d3d_draw_wall(x, (y + 32), drawbottom, (x + 96), (y + 32), (drawbottom - 32), tex5, 1, 1)
                }
                break
            default:
                if ((x % 96) == 0 &amp;&amp; (y % 96) == 0)
                {
                    if (dir == -1 &amp;&amp; culling)
                    {
                        draw_set_color(background_color)
                        d3d_draw_wall(x, y, bottom, (x + 96), y, -128, -1, 1, 1)
                        draw_set_color(c_white)
                    }
                }
                break
        }

        d3d_set_culling(0)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
