<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mask_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_hurt</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i, j;
event_inherited()
atk = 3
xspeed = 0
yspeed = 0
zspeed = 2
grav = 0.25
dir = 0
spd = 0
height = 16
rot = ds_grid_create(3, 3)
for (i = 0; i &lt; 3; i += 1)
{
    for (j = 0; j &lt; 3; j += 1)
    {
        if (i == j)
            ds_grid_set(rot, i, j, 1)
        else
            ds_grid_set(rot, i, j, 0)
    }
}
add = ds_list_create()
ds_list_add(add, 0)
ds_list_add(add, 0)
ds_list_add(add, 0)
angles = ds_list_create()
ds_list_add(angles, 0)
ds_list_add(angles, 0)
ds_list_add(angles, 0)
global.axis_x = ds_list_create()
ds_list_add(global.axis_x, 1)
ds_list_add(global.axis_x, 0)
ds_list_add(global.axis_x, 0)
global.axis_y = ds_list_create()
ds_list_add(global.axis_y, 0)
ds_list_add(global.axis_y, 1)
ds_list_add(global.axis_y, 0)
global.axis_z = ds_list_create()
ds_list_add(global.axis_z, 0)
ds_list_add(global.axis_z, 0)
ds_list_add(global.axis_z, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (z &lt; 0)
{
    z = 0
    zspeed = 0
    grav = 0
    dir = random(360)
    spd = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if wall_detect((x + xspeed), y)
    dir = flip_angle(dir, 90)
if wall_detect(x, (y + yspeed))
    dir = flip_angle(dir, 0)
xspeed = lengthdir_x(spd, dir)
yspeed = lengthdir_y(spd, dir)
x += xspeed
y += yspeed
z += zspeed
zspeed -= grav
if (xspeed != 0 || yspeed != 0)
{
    ds_list_replace(add, 0, ((-yspeed) / (point_distance(0, 0, xspeed, yspeed))))
    ds_list_replace(add, 1, (xspeed / (point_distance(0, 0, xspeed, yspeed))))
    ds_list_replace(add, 2, 0)
    rot = matrix_rotate(rot, add, ((point_distance(0, 0, xspeed, yspeed)) / 10))
    matrix_zyz(rot, angles)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i, j;
d3d_draw_shadow((x - 7), (y - 7), 0.02, (x + 7), (y + 7), 0.02, 1)
draw_set_color(make_color_rgb(38, 127, 0))
d3d_draw_ellipsoid((x - 7), (y - 7), (z + 15), (x + 7), (y + 7), (z + 1), -1, 1, 1, 12)
draw_set_color(make_color_rgb(244, 217, 39))
for (i = 0; i &lt; 4; i += 1)
{
    for (j = 0; j &lt; 3; j += 1)
    {
        d3d_transform_set_identity()
        d3d_transform_add_rotation_x(-45 + j * 45)
        d3d_transform_add_rotation_y(-45 + j * 45)
        d3d_transform_add_rotation_y(i * 90)
        d3d_transform_add_rotation_z(ds_list_find_value(angles, 0))
        d3d_transform_add_rotation_y(ds_list_find_value(angles, 1))
        d3d_transform_add_rotation_z(ds_list_find_value(angles, 2))
        d3d_transform_add_translation(x, y, (z + 8))
        d3d_draw_cone(-3, -3, 4, 3, 3, 10, -1, 1, 1, 0, 6)
        d3d_transform_set_identity()
    }
    d3d_transform_add_rotation_x(90)
    d3d_transform_add_rotation_y(i * 90)
    d3d_transform_add_rotation_z(ds_list_find_value(angles, 0))
    d3d_transform_add_rotation_y(ds_list_find_value(angles, 1))
    d3d_transform_add_rotation_z(ds_list_find_value(angles, 2))
    d3d_transform_add_translation(x, y, (z + 8))
    d3d_draw_cone(-3, -3, 4, 3, 3, 10, -1, 1, 1, 0, 6)
    d3d_transform_set_identity()
    d3d_transform_add_rotation_x(-90)
    d3d_transform_add_rotation_y(i * 90)
    d3d_transform_add_rotation_z(ds_list_find_value(angles, 0))
    d3d_transform_add_rotation_y(ds_list_find_value(angles, 1))
    d3d_transform_add_rotation_z(ds_list_find_value(angles, 2))
    d3d_transform_add_translation(x, y, (z + 8))
    d3d_draw_cone(-3, -3, 4, 3, 3, 10, -1, 1, 1, 0, 6)
    d3d_transform_set_identity()
}
draw_set_color(c_white)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
