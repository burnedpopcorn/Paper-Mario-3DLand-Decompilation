<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rad = 32
radspd = 0
radgrav = 0.25
atk = 5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ID;
rad += radspd
radspd += radgrav
if (radspd &gt; 3)
    radspd = 3
if (rad &gt; 256)
    instance_destroy()
if (collision_line((x - rad), (y - rad), (x - rad), (y + rad), obj_mario, false, false) || collision_line((x + rad), (y - rad), (x + rad), (y + rad), obj_mario, false, false) || collision_line((x - rad), (y - rad), (x + rad), (y - rad), obj_mario, false, false) || collision_line((x - rad), (y + rad), (x + rad), (y + rad), obj_mario, false, false))
{
    if (obj_mario.z &lt;= (z + 8) &amp;&amp; (obj_mario.z + obj_mario.height) &gt;= z &amp;&amp; (!obj_mario.invincible) &amp;&amp; (!obj_mario.underground) &amp;&amp; obj_mario.move)
    {
        with (obj_mario)
        {
            if (global.Powerup != 4)
                global.Powerup = 0
            invincible = 1
            timer_flash = 15
            hp -= max(0, (other.atk - def))
            ID = instance_create(x, y, obj_damage_star)
            ID.z = z
            ID.hurtplayer = 1
            ID.damage = max(0, (other.atk - def))
            with (ID)
                event_user(0)
            alarm[1] = 5
            play_sfx(sfx_damage)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(make_color_rgb(255, 198, 7))
d3d_draw_wall((x - rad), (y - rad), (z + 8), (x - rad), (y + rad), z, -1, 1, 1)
d3d_draw_wall((x - rad), (y + rad), (z + 8), (x + rad), (y + rad), z, -1, 1, 1)
d3d_draw_wall((x + rad), (y + rad), (z + 8), (x + rad), (y - rad), z, -1, 1, 1)
d3d_draw_wall((x + rad), (y - rad), (z + 8), (x - rad), (y - rad), z, -1, 1, 1)
draw_set_color(c_white)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
