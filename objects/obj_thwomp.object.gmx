<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mask_thwomp</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z = (instance_place(x, y, par_floor)).z
zfloor = z
zspeed = 0
grav = 0
height = 80
phase = 0
atk = 9
startheight = 48
alarm[1] = 1
tex = sprite_get_texture(tex_thwomp, 0)
tex2 = sprite_get_texture(tex_thwomp_side, 0)
tex3 = sprite_get_texture(tex_thwomp_top, 0)
wall = instance_create(x, y, obj_wall)
wall.sprite_index = sprite_index
wall.z = z + height
wall.bottom = z
wall.dir = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z += startheight
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>zspeed = 0.5
phase = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (z &lt; zfloor)
{
    z = zfloor
    zspeed = 0
    grav = 0
    alarm[0] = 60
    play_sfx(sfx_crush)
}
if (phase == 2 &amp;&amp; z &gt; (zfloor + startheight - zspeed))
{
    z = zfloor + startheight
    zspeed = 0
    phase = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wall.z = z + height
wall.bottom = z
if instance_exists(obj_mario)
{
    if (phase == 0 &amp;&amp; point_distance((x + sprite_get_bbox_right(sprite_index) * 0.5), (y + sprite_get_bbox_bottom(sprite_index) * 0.5), obj_mario.x, obj_mario.y) &lt; 48 &amp;&amp; obj_mario.z &lt; (z + height - 4) &amp;&amp; (!obj_mario.underground))
    {
        phase = 1
        grav = 0.125
    }
}
z += zspeed
zspeed -= grav
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_draw_wall(x, (bbox_bottom + 1), (z + height), (bbox_right + 1), (bbox_bottom + 1), z, tex, 1, 1)
d3d_draw_wall(x, y, (z + height), x, (bbox_bottom + 1), z, tex2, 1, 1)
d3d_draw_wall((bbox_right + 1), (bbox_bottom + 1), (z + height), (bbox_right + 1), y, z, tex2, 1, 1)
d3d_draw_floor(x, y, (z + height), (bbox_right + 1), (bbox_bottom + 1), (z + height), tex3, 1, 1)
d3d_draw_floor(x, y, z, (bbox_right + 1), (bbox_bottom + 1), z, tex3, 1, 1)
d3d_draw_shadow(x, y, (zfloor + 0.02), (bbox_right + 1), (bbox_bottom + 1), (zfloor + 0.02), 0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
