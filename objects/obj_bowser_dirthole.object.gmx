<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mask_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tex = 190
index = 0
model = -4
xscale = 1
rot = 0
dorot = 0
dying = 0
alarm[2] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_mole_bowser)
    myhole = -4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>model = d3d_model_create()
d3d_model_primitive_begin(model, 5)
d3d_model_vertex_texture(model, -32, 0, 0.3, 0, 0.875)
d3d_model_vertex_texture(model, 32, 0, 0.3, 1, 0.875)
d3d_model_vertex_texture(model, -32, 8, 0.3, 0, 1)
d3d_model_vertex_texture(model, 32, 8, 0.3, 1, 1)
d3d_model_primitive_end(model)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>visible = (!visible)
alarm[0] = 5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dying
{
    if (index &gt; 5)
        index -= 0.5
}
else if instance_exists(obj_mole_bowser)
{
    if obj_mole_bowser.aggro
        tex = 188
    else if obj_mole_bowser.fire
        tex = 189
    else
        tex = 190
    if obj_mole_bowser.calmdown
    {
        index -= 0.2
        if (index &lt; 0)
        {
            tex = 190
            index = 10
            obj_mole_bowser.aggro = 0
            obj_mole_bowser.fire = 0
            obj_mole_bowser.calmdown = 0
        }
    }
    else if obj_mole_bowser.fire
    {
        if (index &lt; 2.5)
            index += 0.2
    }
    else
    {
        index += min(((point_distance(0, 0, obj_mole_bowser.xspeed, obj_mole_bowser.yspeed)) * 0.1), 0.2)
        if (!obj_mole_bowser.aggro)
        {
            if (index &lt; 4)
                index += 0.5
            else if (index &lt; 10)
                index += 0.2
            if (index &gt;= 12)
                index -= 2
        }
        else if (index &gt;= 6)
            index -= 2
    }
}
if dorot
    rot += (4 * xscale)
else
    rot = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_transform_set_identity()
d3d_transform_add_scaling(xscale, 1, 1)
d3d_transform_add_rotation_z(rot)
d3d_transform_add_translation(x, y, z)
d3d_draw_wall(-32, 0, 28, 32, 0, -4, sprite_get_texture(tex, floor(index)), 1, 1)
if (model != 4)
    d3d_model_draw(model, 0, 0, 0, sprite_get_texture(tex, floor(index)))
d3d_transform_set_identity()
if instance_exists(obj_mole_bowser)
{
    if obj_mole_bowser.fire
    {
        d3d_transform_add_scaling(xscale, -1, 1)
        d3d_transform_add_rotation_z(rot)
        d3d_transform_add_translation(x, y, z)
        if (model != 4)
            d3d_model_draw(model, 0, 0, 0, sprite_get_texture(tex, floor(index)))
        d3d_transform_set_identity()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
